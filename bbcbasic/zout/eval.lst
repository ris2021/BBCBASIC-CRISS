   1:				        TITLE   BBC BASIC (C) R.T.RUSSELL 1987
   2:				;
   3:				;BBC BASIC INTERPRETER - Z80 VERSION
   4:				;EXPRESSION EVALUATION & ARITHMETIC MODULE - "EVAL"
   5:				;(C) COPYRIGHT  R.T.RUSSELL  1984
   6:				;VERSION 2.3, 07-05-1984
   7:				;Modified to use external FPP, 01-03-1987
   8:				;VERSION 3.0, 08-03-1987
   9:				;INSTR bug fixed, 30-09-1992
  10:				;
  11:				;BINARY FLOATING POINT REPRESENTATION:
  12:				;   32 BIT SIGN-MAGNITUDE NORMALIZED MANTISSA
  13:				;    8 BIT EXCESS-128 SIGNED EXPONENT
  14:				;   SIGN BIT REPLACES MANTISSA MSB (IMPLIED "1")
  15:				;   MANTISSA=0 & EXPONENT=0 IMPLIES VALUE IS ZERO.
  16:				;
  17:				;BINARY INTEGER REPRESENTATION:
  18:				;   32 BIT 2'S-COMPLEMENT SIGNED INTEGER
  19:				;    "EXPONENT" BYTE = 0 (WHEN PRESENT)
  20:				;
  21:				;NORMAL REGISTER ALLOCATION: MANTISSA - HLH'L'
  22:				;                            EXPONENT - C
  23:				;
  24:				        GLOBAL  EXPR
  25:				        GLOBAL  EXPRN
  26:				        GLOBAL  EXPRI
  27:				        GLOBAL  EXPRS
  28:				        GLOBAL  ITEMI
  29:				        GLOBAL  CONS
  30:				        GLOBAL  LOADS
  31:				        GLOBAL  VAL0
  32:				        GLOBAL  SFIX
  33:				        GLOBAL  STR
  34:				        GLOBAL  HEXSTR
  35:				        GLOBAL  LOAD4
  36:				        GLOBAL  LOADN
  37:				        GLOBAL  DLOAD5
  38:				        GLOBAL  NXT
  39:				        GLOBAL  SWAP
  40:				        GLOBAL  TEST
  41:				        GLOBAL  ZERO
  42:				        GLOBAL  COMMA
  43:				        GLOBAL  BRAKET
  44:				        GLOBAL  DECODE
  45:				        GLOBAL  PUSHS
  46:				        GLOBAL  POPS
  47:				        GLOBAL  SEARCH
  48:				;
  49:				        EXTRN   ERROR
  50:				        EXTRN   SYNTAX
  51:				        EXTRN   CHANEL
  52:				        EXTRN   STORE4
  53:				        EXTRN   STORE5
  54:				        EXTRN   CHECK
  55:				        EXTRN   USR
  56:				        EXTRN   FN
  57:				;
  58:				        EXTRN   GETVAR
  59:				        EXTRN   LEXAN2
  60:				        EXTRN   RANGE
  61:				;
  62:				        EXTRN   STAVAR
  63:				        EXTRN   PAGE
  64:				        EXTRN   TOP
  65:				        EXTRN   LOMEM
  66:				        EXTRN   HIMEM
  67:				        EXTRN   RANDOM
  68:				        EXTRN   COUNT
  69:				        EXTRN   LISTON
  70:				        EXTRN   PC
  71:				        EXTRN   ERL
  72:				        EXTRN   ERR
  73:				        EXTRN   ACCS
  74:				;
  75:				        EXTRN   OSRDCH
  76:				        EXTRN   OSOPEN
  77:				        EXTRN   OSBGET
  78:				        EXTRN   OSSTAT
  79:				        EXTRN   GETCSR
  80:				        EXTRN   GETIME
  81:				        EXTRN   GETIMS
  82:				        EXTRN   GETEXT
  83:				        EXTRN   GETPTR
  84:				        EXTRN   OSKEY
  85:				;
  86:				        EXTRN   POINT
  87:				        EXTRN   ADVAL
  88:				;
  89:				        EXTRN   FPP
  90:				;
  91:				;TABLE OF ADDRESSES FOR FUNCTIONS:
  92:				;
  93:     -	008D'         	FUNTOK  EQU     8DH             ;1st FUNCTION TOKEN
  94:				;
  95:     -	0000' 2006    	FUNTBL: DEFW    DECODE          ;Line number
  96:     -	0002' 7903    	        DEFW    OPENIN          ;OPENIN
  97:     -	0004' 9603    	        DEFW    PTR             ;PTR
  98:     -	0006' 4B03    	        DEFW    PAGEV           ;PAGE
  99:     -	0008' 9E03    	        DEFW    TIMEV           ;TIME
 100:     -	000A' 4103    	        DEFW    LOMEMV          ;LOMEM
 101:     -	000C' 4603    	        DEFW    HIMEMV          ;HIMEM
 102:     -	000E' EA03    	        DEFW    ABS             ;ABS
 103:     -	0010' 2604    	        DEFW    ACS             ;ACS
 104:     -	0012' 0000    	        DEFW    ADVAL           ;ADVAL
 105:     -	0014' 2E03    	        DEFW    ASC             ;ASC
 106:     -	0016' 1E04    	        DEFW    ASN             ;ASN
 107:     -	0018' 2204    	        DEFW    ATN             ;ATN
 108:     -	001A' 0A03    	        DEFW    BGET            ;BGET
 109:     -	001C' 0A04    	        DEFW    COS             ;COS
 110:     -	001E' 6903    	        DEFW    COUNTV          ;COUNT
 111:     -	0020' F203    	        DEFW    DEG             ;DEG
 112:     -	0022' 5F03    	        DEFW    ERLV            ;ERL
 113:     -	0024' 6403    	        DEFW    ERRV            ;ERR
 114:     -	0026' 4A04    	        DEFW    EVAL            ;EVAL
 115:     -	0028' 1204    	        DEFW    EXP             ;EXP
 116:     -	002A' 8E03    	        DEFW    EXT             ;EXT
 117:     -	002C' B806    	        DEFW    ZERO            ;FALSE
 118:     -	002E' 0000    	        DEFW    FN              ;FN
 119:     -	0030' 1803    	        DEFW    GET             ;GET
 120:     -	0032' 1303    	        DEFW    INKEY           ;INKEY
 121:     -	0034' E304    	        DEFW    INSTR           ;INSTR(
 122:     -	0036' FE03    	        DEFW    INT             ;INT
 123:     -	0038' 3B03    	        DEFW    LEN             ;LEN
 124:     -	003A' 1604    	        DEFW    LN              ;LN
 125:     -	003C' 1A04    	        DEFW    LOG             ;LOG
 126:     -	003E' EE03    	        DEFW    NOTK            ;NOT
 127:     -	0040' 7603    	        DEFW    OPENUP          ;OPENUP
 128:     -	0042' 7403    	        DEFW    OPENOT          ;OPENOUT
 129:     -	0044' E603    	        DEFW    PI              ;PI
 130:     -	0046' 0000    	        DEFW    POINT           ;POINT(
 131:     -	0048' F302    	        DEFW    POS             ;POS
 132:     -	004A' F603    	        DEFW    RAD             ;RAD
 133:     -	004C' 7704    	        DEFW    RND             ;RND
 134:     -	004E' FA03    	        DEFW    SGN             ;SGN
 135:     -	0050' 0E04    	        DEFW    SIN             ;SIN
 136:     -	0052' 0204    	        DEFW    SQR             ;SQR
 137:     -	0054' 0604    	        DEFW    TAN             ;TAN
 138:     -	0056' 5003    	        DEFW    TOPV            ;TO(P)
 139:     -	0058' DB03    	        DEFW    TRUE            ;TRUE
 140:     -	005A' 0000    	        DEFW    USR             ;USR
 141:     -	005C' 3D04    	        DEFW    VAL             ;VAL
 142:     -	005E' F902    	        DEFW    VPOS            ;VPOS
 143:     -	0060' 6105    	        DEFW    CHRS            ;CHRS
 144:     -	0062' 6805    	        DEFW    GETS            ;GETS
 145:     -	0064' 6E05    	        DEFW    INKEYS          ;INKEYS
 146:     -	0066' AF05    	        DEFW    LEFTS           ;LEFTS(
 147:     -	0068' 7E05    	        DEFW    MIDS            ;MIDS(
 148:     -	006A' CA05    	        DEFW    RIGHTS          ;RIGHTS(
 149:     -	006C' 7806    	        DEFW    STRS            ;STR$
 150:     -	006E' DE05    	        DEFW    STRING          ;STRINGS(
 151:     -	0070' FE02    	        DEFW    EOF             ;EOF
 152:				;
 153:     -	00C6'         	TCMD    EQU     FUNTOK+($-FUNTBL)/2
 154:				;
 155:     -	0080'         	ANDK    EQU     80H
 156:     -	0081'         	DIVK    EQU     81H
 157:     -	0082'         	EORK    EQU     82H
 158:     -	0083'         	MODK    EQU     83H
 159:     -	0084'         	ORK     EQU     84H
 160:				;
 161:     -	0072' C903    	SOPTBL: DEFW    SLE             ;<= (STRING)
 162:     -	0074' D103    	        DEFW    SNE             ;<>
 163:     -	0076' C303    	        DEFW    SGE             ;>=
 164:     -	0078' B603    	        DEFW    SLT             ;<
 165:     -	007A' D703    	        DEFW    SEQ             ;=
 166:     -	007C' BC03    	        DEFW    SGT             ;>
 167:				;
 168:				;EXPR - VARIABLE-TYPE EXPRESSION EVALUATION
 169:				;     Expression type is returned in A'F':
 170:				;        Numeric - A' bit 7=0, F' sign bit cleared.
 171:				;         String - A' bit 7=1, F' sign bit set.
 172:				;Floating-point or integer result returned in HLH'L'C
 173:				; Integer result denoted by C=0 and HLH'L' non-zero.
 174:				;String result returned in string accumulator, DE set.
 175:				;
 176:				;Hierarchy is: (1) Variables, functions,
 177:				;                  constants, bracketed expressions.
 178:				;              (2) ^
 179:				;              (3) * / MOD DIV
 180:				;              (4) + -
 181:				;              (5) = <> <= >= > <
 182:				;              (6) AND
 183:				;              (7) EOR OR
 184:				;
 185:    0+17	007E' CD9300  	EXPR:   CALL    EXPR1           ;GET FIRST OPERAND
 186:   17+7	0081' FE82    	EXPR0A: CP      EORK            ;CHECK OPERATOR
 187:   24+7+5	0083' 2803    	        JR      Z,EXPR0B
 188:   31+7	0085' FE84    	        CP      ORK
 189:   38+5+6	0087' C0      	        RET     NZ
 190:   43+17	0088' CD4307  	EXPR0B: CALL    SAVE            ;SAVE FIRST OPERAND
 191:   60+17	008B' CD9300  	        CALL    EXPR1           ;GET SECOND OPERAND
 192:   77+17	008E' CD5107  	        CALL    DOIT            ;DO OPERATION
 193:   94+12	0091' 18EE    	        JR      EXPR0A          ;CONTINUE
 194:				;
 195:  106+17	0093' CDA400  	EXPR1:  CALL    EXPR2
 196:  123+7	0096' FE80    	EXPR1A: CP      ANDK
 197:  130+5+6	0098' C0      	        RET     NZ
 198:  135+17	0099' CD4307  	        CALL    SAVE
 199:  152+17	009C' CDA400  	        CALL    EXPR2
 200:  169+17	009F' CD5107  	        CALL    DOIT
 201:  186+12	00A2' 18F2    	        JR      EXPR1A
 202:				;
 203:  198+17	00A4' CD0301  	EXPR2:  CALL    EXPR3
 204:  215+17	00A7' CD1E07  	        CALL    RELOP?
 205:  232+5+6	00AA' C0      	        RET     NZ
 206:  237+4	00AB' 47      	        LD      B,A
 207:  241+10	00AC' FD23    	        INC     IY              ;BUMP OVER OPERATOR
 208:  251+17	00AE' CD7207  	        CALL    NXT
 209:  268+17	00B1' CD1E07  	        CALL    RELOP?          ;COMPOUND OPERATOR?
 210:  285+7+5	00B4' 2008    	        JR      NZ,EXPR2B
 211:  292+10	00B6' FD23    	        INC     IY
 212:  302+4	00B8' B8      	        CP      B
 213:  306+10	00B9' CA0000  	        JP      Z,SYNTAX        ;ILLEGAL COMBINATION
 214:  316+4	00BC' 80      	        ADD     A,B
 215:  320+4	00BD' 47      	        LD      B,A
 216:  324+4	00BE' 78      	EXPR2B: LD      A,B
 217:  328+4	00BF' 08      	        EX      AF,AF'
 218:  332+10	00C0' FAD600  	        JP      M,EXPR2S
 219:  342+4	00C3' 08      	        EX      AF,AF'
 220:  346+7	00C4' D604    	        SUB     4
 221:  353+7	00C6' FE3A    	        CP      '>'-4
 222:  360+7+5	00C8' 2002    	        JR      NZ,EXPR2C
 223:  367+7	00CA' C602    	        ADD     A,2
 224:  374+17	00CC' CD4507  	EXPR2C: CALL    SAVE1
 225:  391+17	00CF' CD0301  	        CALL    EXPR3
 226:  408+17	00D2' CD5107  	        CALL    DOIT            ;Must NOT be "JP DOIT"
 227:  425+10	00D5' C9      	        RET
 228:				;
 229:  435+4	00D6' 08      	EXPR2S: EX      AF,AF'
 230:  439+4	00D7' 3D      	        DEC     A
 231:  443+7	00D8' E607    	        AND     7
 232:  450+17	00DA' CDD906  	        CALL    PUSHS           ;SAVE STRING ON STACK
 233:  467+11	00DD' F5      	        PUSH    AF              ;SAVE OPERATOR
 234:  478+17	00DE' CD0301  	        CALL    EXPR3           ;SECOND STRING
 235:  495+4	00E1' 08      	        EX      AF,AF'
 236:  499+10	00E2' F2B301  	        JP      P,TYPE
 237:  509+10	00E5' F1      	        POP     AF
 238:  519+4	00E6' 4B      	        LD      C,E             ;LENGTH OF STRING #2
 239:  523+10	00E7' D1      	        POP     DE
 240:  533+10	00E8' 210000  	        LD      HL,0
 241:  543+11	00EB' 39      	        ADD     HL,SP
 242:  554+4	00EC' 43      	        LD      B,E             ;LENGTH OF STRING #1
 243:  558+11	00ED' D5      	        PUSH    DE
 244:  569+10	00EE' 110000  	        LD      DE,ACCS
 245:  579+4	00F1' EB      	        EX      DE,HL
 246:  583+17	00F2' CD7D07  	        CALL    DISPT2
 247:  600+10	00F5' D1      	        POP     DE
 248:  610+4	00F6' EB      	        EX      DE,HL
 249:  614+7	00F7' 2600    	        LD      H,0
 250:  621+11	00F9' 39      	        ADD     HL,SP
 251:  632+6	00FA' F9      	        LD      SP,HL
 252:  638+4	00FB' EB      	        EX      DE,HL
 253:  642+4	00FC' AF      	        XOR     A               ;NUMERIC MARKER
 254:  646+4	00FD' 4F      	        LD      C,A             ;INTEGER MARKER
 255:  650+4	00FE' 08      	        EX      AF,AF'
 256:  654+19	00FF' FD7E00  	        LD      A,(IY)
 257:  673+10	0102' C9      	        RET
 258:				;
 259:  683+17	0103' CD5201  	EXPR3:  CALL    EXPR4
 260:  700+7	0106' FE2D    	EXPR3A: CP      '-'
 261:  707+7+5	0108' 2808    	        JR      Z,EXPR3B
 262:  714+7	010A' FE2B    	        CP      '+'
 263:  721+5+6	010C' C0      	        RET     NZ
 264:  726+4	010D' 08      	        EX      AF,AF'
 265:  730+10	010E' FA1D01  	        JP      M,EXPR3S
 266:  740+4	0111' 08      	        EX      AF,AF'
 267:  744+17	0112' CD4307  	EXPR3B: CALL    SAVE
 268:  761+17	0115' CD5201  	        CALL    EXPR4
 269:  778+17	0118' CD5107  	        CALL    DOIT
 270:  795+12	011B' 18E9    	        JR      EXPR3A
 271:				;
 272:  807+4	011D' 08      	EXPR3S: EX      AF,AF'
 273:  811+10	011E' FD23    	        INC     IY              ;BUMP PAST '+'
 274:  821+17	0120' CDD906  	        CALL    PUSHS           ;SAVE STRING ON STACK
 275:  838+17	0123' CD5201  	        CALL    EXPR4           ;SECOND STRING
 276:  855+4	0126' 08      	        EX      AF,AF'
 277:  859+10	0127' F2B301  	        JP      P,TYPE
 278:  869+4	012A' 4B      	        LD      C,E             ;C=LENGTH
 279:  873+10	012B' D1      	        POP     DE
 280:  883+11	012C' D5      	        PUSH    DE
 281:  894+10	012D' 210000  	        LD      HL,ACCS
 282:  904+4	0130' 54      	        LD      D,H
 283:  908+4	0131' 79      	        LD      A,C
 284:  912+4	0132' B7      	        OR      A
 285:  916+7+5	0133' 280F    	        JR      Z,EXP3S3
 286:  923+4	0135' 45      	        LD      B,L
 287:  927+4	0136' 6F      	        LD      L,A             ;SOURCE
 288:  931+4	0137' 83      	        ADD     A,E
 289:  935+4	0138' 5F      	        LD      E,A             ;DESTINATION
 290:  939+7	0139' 3E13    	        LD      A,19
 291:  946+10	013B' DA0000  	        JP      C,ERROR         ;"String too long"
 292:  956+11	013E' D5      	        PUSH    DE
 293:  967+4	013F' 1D      	        DEC     E
 294:  971+4	0140' 2D      	        DEC     L
 295:  975+16+5	0141' EDB8    	        LDDR                    ;COPY
 296:  991+10	0143' D1      	        POP     DE
 297: 1001+4	0144' D9      	EXP3S3: EXX
 298: 1005+10	0145' C1      	        POP     BC
 299: 1015+17	0146' CDF806  	        CALL    POPS            ;RESTORE FROM STACK
 300: 1032+4	0149' D9      	        EXX
 301: 1036+7	014A' F680    	        OR      80H             ;FLAG STRING
 302: 1043+4	014C' 08      	        EX      AF,AF'
 303: 1047+19	014D' FD7E00  	        LD      A,(IY)
 304: 1066+12	0150' 18B4    	        JR      EXPR3A
 305:				;
 306: 1078+17	0152' CD6F01  	EXPR4:  CALL    EXPR5
 307: 1095+7	0155' FE2A    	EXPR4A: CP      '*'
 308: 1102+7+5	0157' 280B    	        JR      Z,EXPR4B
 309: 1109+7	0159' FE2F    	        CP      '/'
 310: 1116+7+5	015B' 2807    	        JR      Z,EXPR4B
 311: 1123+7	015D' FE83    	        CP      MODK
 312: 1130+7+5	015F' 2803    	        JR      Z,EXPR4B
 313: 1137+7	0161' FE81    	        CP      DIVK
 314: 1144+5+6	0163' C0      	        RET     NZ
 315: 1149+17	0164' CD4307  	EXPR4B: CALL    SAVE
 316: 1166+17	0167' CD6F01  	        CALL    EXPR5
 317: 1183+17	016A' CD5107  	        CALL    DOIT
 318: 1200+12	016D' 18E6    	        JR      EXPR4A
 319:				;
 320: 1212+17	016F' CD0A02  	EXPR5:  CALL    ITEM
 321: 1229+4	0172' B7      	        OR      A               ;TEST TYPE
 322: 1233+4	0173' 08      	        EX      AF,AF'          ;SAVE TYPE
 323: 1237+17	0174' CD7207  	EXPR5A: CALL    NXT
 324: 1254+7	0177' FE5E    	        CP      '^'
 325: 1261+5+6	0179' C0      	        RET     NZ
 326: 1266+17	017A' CD4307  	        CALL    SAVE
 327: 1283+17	017D' CD0A02  	        CALL    ITEM
 328: 1300+4	0180' B7      	        OR      A
 329: 1304+4	0181' 08      	        EX      AF,AF'
 330: 1308+17	0182' CD5107  	        CALL    DOIT
 331: 1325+12	0185' 18ED    	        JR      EXPR5A
 332:				;
 333: 1337+17	0187' CD7E00  	EXPRN:  CALL    EXPR
 334: 1354+4	018A' 08      	        EX      AF,AF'
 335: 1358+5+6	018B' F0      	        RET     P
 336: 1363+12	018C' 1825    	        JR      TYPE
 337:				;
 338: 1375+17	018E' CD7E00  	EXPRI:  CALL    EXPR
 339: 1392+4	0191' 08      	        EX      AF,AF'
 340: 1396+10	0192' F23504  	        JP      P,SFIX
 341: 1406+12	0195' 181C    	        JR      TYPE
 342:				;
 343: 1418+17	0197' CD7E00  	EXPRS:  CALL    EXPR
 344: 1435+4	019A' 08      	        EX      AF,AF'
 345: 1439+5+6	019B' F8      	        RET     M
 346: 1444+12	019C' 1815    	        JR      TYPE
 347:				;
 348:				;
 349: 1456+17	019E' CD0A02  	ITEMN:  CALL    ITEM
 350: 1473+4	01A1' B7      	        OR      A
 351: 1477+5+6	01A2' F0      	        RET     P
 352: 1482+12	01A3' 180E    	        JR      TYPE
 353:				;
 354: 1494+17	01A5' CD0A02  	ITEMI:  CALL    ITEM
 355: 1511+4	01A8' B7      	        OR      A
 356: 1515+10	01A9' F23504  	        JP      P,SFIX
 357: 1525+12	01AC' 1805    	        JR      TYPE
 358:				;
 359: 1537+17	01AE' CD0A02  	ITEMS:  CALL    ITEM
 360: 1554+4	01B1' B7      	        OR      A
 361: 1558+5+6	01B2' F8      	        RET     M
 362: 1563+7	01B3' 3E06    	TYPE:   LD      A,6
 363: 1570+10	01B5' C30000  	        JP      ERROR           ;"Type mismatch"
 364:				;
 365: 1580+17	01B8' CD7E00  	ITEM1:  CALL    EXPR            ;BRACKETED EXPR
 366: 1597+17	01BB' CD3607  	        CALL    BRAKET
 367: 1614+4	01BE' 08      	        EX      AF,AF'
 368: 1618+10	01BF' C9      	        RET
 369:				;
 370:				;HEX - Get hexadecimal constant.
 371:				;   Inputs: ASCII string at (IY)
 372:				;  Outputs: Integer result in H'L'HL, C=0, A7=0.
 373:				;           IY updated (points to delimiter)
 374:				;
 375: 1628+17	01C0' CDB806  	HEX:    CALL    ZERO
 376: 1645+17	01C3' CD0B07  	        CALL    HEXDIG
 377: 1662+7+5	01C6' 3818    	        JR      C,BADHEX
 378: 1669+10	01C8' FD23    	HEX1:   INC     IY
 379: 1679+7	01CA' E60F    	        AND     0FH
 380: 1686+7	01CC' 0604    	        LD      B,4
 381: 1693+4	01CE' D9      	HEX2:   EXX
 382: 1697+11	01CF' 29      	        ADD     HL,HL
 383: 1708+4	01D0' D9      	        EXX
 384: 1712+15	01D1' ED6A    	        ADC     HL,HL
 385: 1727+8+5	01D3' 10F9    	        DJNZ    HEX2
 386: 1735+4	01D5' D9      	        EXX
 387: 1739+4	01D6' B5      	        OR      L
 388: 1743+4	01D7' 6F      	        LD      L,A
 389: 1747+4	01D8' D9      	        EXX
 390: 1751+17	01D9' CD0B07  	        CALL    HEXDIG
 391: 1768+7+5	01DC' 30EA    	        JR      NC,HEX1
 392: 1775+4	01DE' AF      	        XOR     A
 393: 1779+10	01DF' C9      	        RET
 394:				;
 395: 1789+7	01E0' 3E1C    	BADHEX: LD      A,28
 396: 1796+10	01E2' C30000  	        JP      ERROR           ;"Bad HEX"
 397:				;
 398:				;MINUS - Unary minus.
 399:				;   Inputs: IY = text pointer
 400:				;  Outputs: Numeric result, same type as argument.
 401:				;           Result in H'L'HLC
 402:				;
 403: 1806+17	01E5' CD9E01  	MINUS:  CALL    ITEMN
 404: 1823+4	01E8' 0D      	MINUS0: DEC     C
 405: 1827+4	01E9' 0C      	        INC     C
 406: 1831+7+5	01EA' 2806    	        JR      Z,NEGATE        ;ZERO/INTEGER
 407: 1838+4	01EC' 7C      	        LD      A,H
 408: 1842+7	01ED' EE80    	        XOR     80H             ;CHANGE SIGN (FP)
 409: 1849+4	01EF' 67      	        LD      H,A
 410: 1853+4	01F0' AF      	        XOR     A               ;NUMERIC MARKER
 411: 1857+10	01F1' C9      	        RET
 412:				;
 413: 1867+4	01F2' D9      	NEGATE: EXX
 414: 1871+4	01F3' 7C      	        LD      A,H
 415: 1875+4	01F4' 2F      	        CPL
 416: 1879+4	01F5' 67      	        LD      H,A
 417: 1883+4	01F6' 7D      	        LD      A,L
 418: 1887+4	01F7' 2F      	        CPL
 419: 1891+4	01F8' 6F      	        LD      L,A
 420: 1895+4	01F9' D9      	        EXX
 421: 1899+4	01FA' 7C      	        LD      A,H
 422: 1903+4	01FB' 2F      	        CPL
 423: 1907+4	01FC' 67      	        LD      H,A
 424: 1911+4	01FD' 7D      	        LD      A,L
 425: 1915+4	01FE' 2F      	        CPL
 426: 1919+4	01FF' 6F      	        LD      L,A
 427: 1923+4	0200' D9      	ADD1:   EXX
 428: 1927+6	0201' 23      	        INC     HL
 429: 1933+4	0202' 7C      	        LD      A,H
 430: 1937+4	0203' B5      	        OR      L
 431: 1941+4	0204' D9      	        EXX
 432: 1945+7	0205' 3E00    	        LD      A,0             ;NUMERIC MARKER
 433: 1952+5+6	0207' C0      	        RET     NZ
 434: 1957+6	0208' 23      	        INC     HL
 435: 1963+10	0209' C9      	        RET
 436:				;
 437:				;ITEM - VARIABLE TYPE NUMERIC OR STRING ITEM.
 438:				;Item type is returned in A:  Bit 7=0 numeric.
 439:				;                             Bit 7=1 string.
 440:				;Numeric item returned in HLH'L'C.
 441:				;String item returned in string accumulator,
 442:				;  DE addresses byte after last (E=length).
 443:				;
 444: 1973+17	020A' CD0000  	ITEM:   CALL    CHECK
 445: 1990+17	020D' CD7207  	        CALL    NXT
 446: 2007+10	0210' FD23    	        INC     IY
 447: 2017+7	0212' FE26    	        CP      '&'
 448: 2024+7+5	0214' 28AA    	        JR      Z,HEX           ;HEX CONSTANT
 449: 2031+7	0216' FE2D    	        CP      '-'
 450: 2038+7+5	0218' 28CB    	        JR      Z,MINUS         ;UNARY MINUS
 451: 2045+7	021A' FE2B    	        CP      '+'
 452: 2052+7+5	021C' 2880    	        JR      Z,ITEMN         ;UNARY PLUS
 453: 2059+7	021E' FE28    	        CP      '('
 454: 2066+7+5	0220' 2896    	        JR      Z,ITEM1         ;EXPRESSION
 455: 2073+7	0222' FE22    	        CP      '"'
 456: 2080+7+5	0224' 2863    	        JR      Z,CONS          ;STRING CONSTANT
 457: 2087+7	0226' FEC6    	        CP      TCMD
 458: 2094+10	0228' D20000  	        JP      NC,SYNTAX       ;SYNTAX ERROR
 459: 2104+7	022B' FE8D    	        CP      FUNTOK
 460: 2111+10	022D' D28307  	        JP      NC,DISPAT       ;FUNCTION
 461: 2121+10	0230' FD2B    	        DEC     IY
 462: 2131+7	0232' FE3A    	        CP      ':'
 463: 2138+7+5	0234' 3008    	        JR      NC,ITEM2        ;VARIABLE?
 464: 2145+7	0236' FE30    	        CP      '0'
 465: 2152+7+5	0238' 3074    	        JR      NC,CON          ;NUMERIC CONSTANT
 466: 2159+7	023A' FE2E    	        CP      '.'
 467: 2166+7+5	023C' 2870    	        JR      Z,CON           ;NUMERIC CONSTANT
 468: 2173+17	023E' CD0000  	ITEM2:  CALL    GETVAR          ;VARIABLE
 469: 2190+7+5	0241' 202B    	        JR      NZ,NOSUCH
 470: 2197+4	0243' B7      	        OR      A
 471: 2201+10	0244' FAD102  	        JP      M,LOADS         ;STRING VARIABLE
 472: 2211+4	0247' B7      	LOADN:  OR      A
 473: 2215+7+5	0248' 2818    	        JR      Z,LOAD1         ;BYTE VARIABLE
 474: 2222+7	024A' 0E00    	        LD      C,0
 475: 2229+8	024C' CB47    	        BIT     0,A
 476: 2237+7+5	024E' 2803    	        JR      Z,LOAD4         ;INTEGER VARIABLE
 477: 2244+19	0250' DD4E04  	LOAD5:  LD      C,(IX+4)
 478: 2263+4	0253' D9      	LOAD4:  EXX
 479: 2267+19	0254' DD6E00  	        LD      L,(IX+0)
 480: 2286+19	0257' DD6601  	        LD      H,(IX+1)
 481: 2305+4	025A' D9      	        EXX
 482: 2309+19	025B' DD6E02  	        LD      L,(IX+2)
 483: 2328+19	025E' DD6603  	        LD      H,(IX+3)
 484: 2347+10	0261' C9      	        RET
 485:				;
 486: 2357+10	0262' 210000  	LOAD1:  LD      HL,0
 487: 2367+4	0265' D9      	        EXX
 488: 2371+7	0266' 2600    	        LD      H,0
 489: 2378+19	0268' DD6E00  	        LD      L,(IX+0)
 490: 2397+4	026B' D9      	        EXX
 491: 2401+4	026C' 4C      	        LD      C,H
 492: 2405+10	026D' C9      	        RET
 493:				;
 494: 2415+10	026E' DA0000  	NOSUCH: JP      C,SYNTAX
 495: 2425+13	0271' 3A0000  	        LD      A,(LISTON)
 496: 2438+8	0274' CB6F    	        BIT     5,A
 497: 2446+7	0276' 3E1A    	        LD      A,26
 498: 2453+7+5	0278' 2023    	        JR      NZ,ERROR0       ;"No such variable"
 499: 2460+10	027A' FD23    	NOS1:   INC     IY
 500: 2470+17	027C' CD0000  	        CALL    RANGE
 501: 2487+7+5	027F' 30F9    	        JR      NC,NOS1
 502: 2494+14	0281' DD210000	        LD      IX,PC
 503: 2508+4	0285' AF      	        XOR     A
 504: 2512+4	0286' 4F      	        LD      C,A
 505: 2516+12	0287' 18CA    	        JR      LOAD4
 506:				;
 507:				;CONS - Get string constant from ASCII string.
 508:				;   Inputs: ASCII string at (IY)
 509:				;  Outputs: Result in string accumulator.
 510:				;           D = MS byte of ACCS, E = string length
 511:				;           A7 = 1 (string marker)
 512:				;           IY updated
 513:				;
 514: 2528+10	0289' 110000  	CONS:   LD      DE,ACCS
 515: 2538+19	028C' FD7E00  	CONS3:  LD      A,(IY)
 516: 2557+10	028F' FD23    	        INC     IY
 517: 2567+7	0291' FE22    	        CP      '"'
 518: 2574+7+5	0293' 280B    	        JR      Z,CONS2
 519: 2581+7	0295' 12      	CONS1:  LD      (DE),A
 520: 2588+4	0296' 1C      	        INC     E
 521: 2592+7	0297' FE0D    	        CP      CR
 522: 2599+7+5	0299' 20F1    	        JR      NZ,CONS3
 523: 2606+7	029B' 3E09    	        LD      A,9
 524: 2613+10	029D' C30000  	ERROR0: JP      ERROR           ;"Missing """
 525:				;
 526: 2623+19	02A0' FD7E00  	CONS2:  LD      A,(IY)
 527: 2642+7	02A3' FE22    	        CP      '"'
 528: 2649+10	02A5' FD23    	        INC     IY
 529: 2659+7+5	02A7' 28EC    	        JR      Z,CONS1
 530: 2666+10	02A9' FD2B    	        DEC     IY
 531: 2676+7	02AB' 3E80    	        LD      A,80H           ;STRING MARKER
 532: 2683+10	02AD' C9      	        RET
 533:				;
 534:				;CON - Get unsigned numeric constant from ASCII string.
 535:				;   Inputs: ASCII string at (IY).
 536:				;  Outputs: Variable-type result in HLH'L'C
 537:				;           IY updated (points to delimiter)
 538:				;           A7 = 0 (numeric marker)
 539:				;
 540: 2693+15	02AE' FDE5    	CON:    PUSH    IY
 541: 2708+14	02B0' DDE1    	        POP     IX
 542: 2722+7	02B2' 3E24    	        LD      A,36
 543: 2729+17	02B4' CD0000  	        CALL    FPP
 544: 2746+7+5	02B7' 38E4    	        JR      C,ERROR0
 545: 2753+15	02B9' DDE5    	        PUSH    IX
 546: 2768+14	02BB' FDE1    	        POP     IY
 547: 2782+4	02BD' AF      	        XOR     A
 548: 2786+10	02BE' C9      	        RET
 549:				;
 550: 2796+19	02BF' DD4604  	DLOAD5: LD      B,(IX+4)
 551: 2815+4	02C2' D9      	        EXX
 552: 2819+19	02C3' DD5E00  	        LD      E,(IX+0)
 553: 2838+19	02C6' DD5601  	        LD      D,(IX+1)
 554: 2857+4	02C9' D9      	        EXX
 555: 2861+19	02CA' DD5E02  	        LD      E,(IX+2)
 556: 2880+19	02CD' DD5603  	        LD      D,(IX+3)
 557: 2899+10	02D0' C9      	        RET
 558:				;
 559: 2909+10	02D1' 110000  	LOADS:  LD      DE,ACCS
 560: 2919+4	02D4' 1F      	        RRA
 561: 2923+7+5	02D5' 3010    	        JR      NC,LOADS2       ;FIXED STRING
 562: 2930+17	02D7' CD5302  	        CALL    LOAD4
 563: 2947+4	02DA' D9      	        EXX
 564: 2951+4	02DB' 7D      	        LD      A,L
 565: 2955+4	02DC' D9      	        EXX
 566: 2959+4	02DD' B7      	        OR      A
 567: 2963+4	02DE' 4F      	        LD      C,A
 568: 2967+7	02DF' 3E80    	        LD      A,80H           ;STRING MARKER
 569: 2974+5+6	02E1' C8      	        RET     Z
 570: 2979+7	02E2' 0600    	        LD      B,0
 571: 2986+16+5	02E4' EDB0    	        LDIR
 572: 3002+10	02E6' C9      	        RET
 573: 3012+7	02E7' 7E      	LOADS2: LD      A,(HL)
 574: 3019+7	02E8' 12      	        LD      (DE),A
 575: 3026+6	02E9' 23      	        INC     HL
 576: 3032+7	02EA' FE0D    	        CP      CR
 577: 3039+7	02EC' 3E80    	        LD      A,80H           ;STRING MARKER
 578: 3046+5+6	02EE' C8      	        RET     Z
 579: 3051+4	02EF' 1C      	        INC     E
 580: 3055+7+5	02F0' 20F5    	        JR      NZ,LOADS2
 581: 3062+10	02F2' C9      	        RET                     ;RETURN NULL STRING
 582:				;
 584:				;
 585:				;VARIABLE-TYPE FUNCTIONS:
 586:				;
 587:				;Result returned in HLH'L'C (floating point)
 588:				;Result returned in HLH'L' (C=0) (integer)
 589:				;Result returned in string accumulator & DE (string)
 590:				;All registers destroyed.
 591:				;IY (text pointer) updated.
 592:				;Bit 7 of A indicates type: 0 = numeric, 1 = string.
 593:				;
 594:				;
 595:				;POS - horizontal cursor position.
 596:				;VPOS - vertical cursor position.
 597:				;EOF - return status of file.
 598:				;BGET - read byte from file.
 599:				;INKEY - as GET but wait only n centiseconds.
 600:				;GET - wait for keypress and return ASCII value.
 601:				;GET(n) - input from Z80 port n.
 602:				;ASC - ASCII value of string.
 603:				;LEN - length of string.
 604:				;LOMEM - location of dynamic variables.
 605:				;HIMEM - top of available RAM.
 606:				;PAGE - start of current text page.
 607:				;TOP - address of first free byte after program.
 608:				;ERL - line number where last error occurred.
 609:				;ERR - number of last error.
 610:				;COUNT - number of printing characters since CR.
 611:				;Results are integer numeric.
 612:				;
 613: 3072+17	02F3' CD0000  	POS:    CALL    GETCSR
 614: 3089+4	02F6' EB      	        EX      DE,HL
 615: 3093+12	02F7' 1875    	        JR      COUNT1
 616: 3105+17	02F9' CD0000  	VPOS:   CALL    GETCSR
 617: 3122+12	02FC' 1870    	        JR      COUNT1
 618: 3134+17	02FE' CD0000  	EOF:    CALL    CHANEL
 619: 3151+17	0301' CD0000  	        CALL    OSSTAT
 620: 3168+10	0304' CADB03  	        JP      Z,TRUE
 621: 3178+10	0307' C3B806  	        JP      ZERO
 622: 3188+17	030A' CD0000  	BGET:   CALL    CHANEL          ;CHANNEL NUMBER
 623: 3205+17	030D' CD0000  	        CALL    OSBGET
 624: 3222+4	0310' 6F      	        LD      L,A
 625: 3226+12	0311' 1859    	        JR      COUNT0
 626: 3238+17	0313' CD6E05  	INKEY:  CALL    INKEYS
 627: 3255+12	0316' 1819    	        JR      ASC0
 628: 3267+17	0318' CD7207  	GET:    CALL    NXT
 629: 3284+7	031B' FE28    	        CP      '('
 630: 3291+7+5	031D' 200A    	        JR      NZ,GET0
 631: 3298+17	031F' CDA501  	        CALL    ITEMI           ;PORT ADDRESS
 632: 3315+4	0322' D9      	        EXX
 633: 3319+4	0323' 44      	        LD      B,H
 634: 3323+4	0324' 4D      	        LD      C,L
 635: 3327+12	0325' ED68    	        IN      L,(C)           ;INPUT FROM PORT BC
 636: 3339+12	0327' 1843    	        JR      COUNT0
 637: 3351+17	0329' CD6805  	GET0:   CALL    GETS
 638: 3368+12	032C' 1808    	        JR      ASC1
 639: 3380+17	032E' CDAE01  	ASC:    CALL    ITEMS
 640: 3397+4	0331' AF      	ASC0:   XOR     A
 641: 3401+4	0332' BB      	        CP      E
 642: 3405+10	0333' CADB03  	        JP      Z,TRUE          ;NULL STRING
 643: 3415+16	0336' 2A0000  	ASC1:   LD      HL,(ACCS)
 644: 3431+12	0339' 1831    	        JR      COUNT0
 645: 3443+17	033B' CDAE01  	LEN:    CALL    ITEMS
 646: 3460+4	033E' EB      	        EX      DE,HL
 647: 3464+12	033F' 182B    	        JR      COUNT0
 648: 3476+16	0341' 2A0000  	LOMEMV: LD      HL,(LOMEM)
 649: 3492+12	0344' 1828    	        JR      COUNT1
 650: 3504+16	0346' 2A0000  	HIMEMV: LD      HL,(HIMEM)
 651: 3520+12	0349' 1823    	        JR      COUNT1
 652: 3532+16	034B' 2A0000  	PAGEV:  LD      HL,(PAGE)
 653: 3548+12	034E' 181E    	        JR      COUNT1
 654: 3560+19	0350' FD7E00  	TOPV:   LD      A,(IY)
 655: 3579+10	0353' FD23    	        INC     IY              ;SKIP "P"
 656: 3589+7	0355' FE50    	        CP      'P'
 657: 3596+10	0357' C20000  	        JP      NZ,SYNTAX       ;"Syntax Error"
 658: 3606+16	035A' 2A0000  	        LD      HL,(TOP)
 659: 3622+12	035D' 180F    	        JR      COUNT1
 660: 3634+16	035F' 2A0000  	ERLV:   LD      HL,(ERL)
 661: 3650+12	0362' 180A    	        JR      COUNT1
 662: 3662+16	0364' 2A0000  	ERRV:   LD      HL,(ERR)
 663: 3678+12	0367' 1803    	        JR      COUNT0
 664: 3690+16	0369' 2A0000  	COUNTV: LD      HL,(COUNT)
 665: 3706+7	036C' 2600    	COUNT0: LD      H,0
 666: 3713+4	036E' D9      	COUNT1: EXX
 667: 3717+4	036F' AF      	        XOR     A
 668: 3721+4	0370' 4F      	        LD      C,A             ;INTEGER MARKER
 669: 3725+4	0371' 67      	        LD      H,A
 670: 3729+4	0372' 6F      	        LD      L,A
 671: 3733+10	0373' C9      	        RET
 672:				;
 673:				;OPENIN - Open a file for reading.
 674:				;OPENOUT - Open a file for writing.
 675:				;OPENUP - Open a file for reading or writing.
 676:				;Result is integer channel number (0 if error)
 677:				;
 678: 3743+4	0374' AF      	OPENOT: XOR     A
 679:     -	0375' 21      	        DEFB    21H             ;SKIP NEXT 2 BYTES
 680: 3747+7	0376' 3E02    	OPENUP: LD      A,2
 681:     -	0378' 21      	        DEFB    21H             ;SKIP NEXT 2 BYTES
 682: 3754+7	0379' 3E01    	OPENIN: LD      A,1
 683: 3761+11	037B' F5      	        PUSH    AF              ;SAVE OPEN TYPE
 684: 3772+17	037C' CDAE01  	        CALL    ITEMS           ;FILENAME
 685: 3789+7	037F' 3E0D    	        LD      A,CR
 686: 3796+7	0381' 12      	        LD      (DE),A
 687: 3803+10	0382' F1      	        POP     AF              ;RESTORE OPEN TYPE
 688: 3813+7	0383' C6FF    	        ADD     A,-1            ;AFFECT FLAGS
 689: 3820+10	0385' 210000  	        LD      HL,ACCS
 690: 3830+17	0388' CD0000  	        CALL    OSOPEN
 691: 3847+4	038B' 6F      	        LD      L,A
 692: 3851+12	038C' 18DE    	        JR      COUNT0
 693:				;
 694:				;EXT - Return length of file.
 695:				;PTR - Return current file pointer.
 696:				;Results are integer numeric.
 697:				;
 698: 3863+17	038E' CD0000  	EXT:    CALL    CHANEL
 699: 3880+17	0391' CD0000  	        CALL    GETEXT
 700: 3897+12	0394' 1812    	        JR      TIME0
 701:				;
 702: 3909+17	0396' CD0000  	PTR:    CALL    CHANEL
 703: 3926+17	0399' CD0000  	        CALL    GETPTR
 704: 3943+12	039C' 180A    	        JR      TIME0
 705:				;
 706:				;TIME - Return current value of elapsed time.
 707:				;Result is integer numeric.
 708:				;
 709: 3955+19	039E' FD7E00  	TIMEV:  LD      A,(IY)
 710: 3974+7	03A1' FE24    	        CP      '$'
 711: 3981+7+5	03A3' 2809    	        JR      Z,TIMEVS
 712: 3988+17	03A5' CD0000  	        CALL    GETIME
 713: 4005+11	03A8' D5      	TIME0:  PUSH    DE
 714: 4016+4	03A9' D9      	        EXX
 715: 4020+10	03AA' E1      	        POP     HL
 716: 4030+4	03AB' AF      	        XOR     A
 717: 4034+4	03AC' 4F      	        LD      C,A
 718: 4038+10	03AD' C9      	        RET
 719:				;
 720:				;TIME$ - Return date/time string.
 721:				;Result is string
 722:				;
 723: 4048+10	03AE' FD23    	TIMEVS: INC     IY              ;SKIP $
 724: 4058+17	03B0' CD0000  	        CALL    GETIMS
 725: 4075+7	03B3' 3E80    	        LD      A,80H           ;MARK STRING
 726: 4082+10	03B5' C9      	        RET
 727:				;
 729:				;
 730:				;String comparison:
 731:				;
 732: 4092+17	03B6' CDB506  	SLT:    CALL    SCP
 733: 4109+5+6	03B9' D0      	        RET     NC
 734: 4114+12	03BA' 181F    	        JR      TRUE
 735:				;
 736: 4126+17	03BC' CDB506  	SGT:    CALL    SCP
 737: 4143+5+6	03BF' C8      	        RET     Z
 738: 4148+5+6	03C0' D8      	        RET     C
 739: 4153+12	03C1' 1818    	        JR      TRUE
 740:				;
 741: 4165+17	03C3' CDB506  	SGE:    CALL    SCP
 742: 4182+5+6	03C6' D8      	        RET     C
 743: 4187+12	03C7' 1812    	        JR      TRUE
 744:				;
 745: 4199+17	03C9' CDB506  	SLE:    CALL    SCP
 746: 4216+7+5	03CC' 280D    	        JR      Z,TRUE
 747: 4223+5+6	03CE' D0      	        RET     NC
 748: 4228+12	03CF' 180A    	        JR      TRUE
 749:				;
 750: 4240+17	03D1' CDB506  	SNE:    CALL    SCP
 751: 4257+5+6	03D4' C8      	        RET     Z
 752: 4262+12	03D5' 1804    	        JR      TRUE
 753:				;
 754: 4274+17	03D7' CDB506  	SEQ:    CALL    SCP
 755: 4291+5+6	03DA' C0      	        RET     NZ
 756: 4296+7	03DB' 3EFF    	TRUE:   LD      A,-1
 757: 4303+4	03DD' D9      	        EXX
 758: 4307+4	03DE' 67      	        LD      H,A
 759: 4311+4	03DF' 6F      	        LD      L,A
 760: 4315+4	03E0' D9      	        EXX
 761: 4319+4	03E1' 67      	        LD      H,A
 762: 4323+4	03E2' 6F      	        LD      L,A
 763: 4327+4	03E3' 3C      	        INC     A
 764: 4331+4	03E4' 4F      	        LD      C,A
 765: 4335+10	03E5' C9      	        RET
 766:				;
 767:				;PI - Return PI (3.141592654)
 768:				;Result is floating-point numeric.
 769:				;
 770: 4345+7	03E6' 3E23    	PI:     LD      A,35
 771: 4352+12	03E8' 1843    	        JR      FPP1
 772:				;
 773:				;ABS - Absolute value
 774:				;Result is numeric, variable type.
 775:				;
 776: 4364+7	03EA' 3E10    	ABS:    LD      A,16
 777: 4371+12	03EC' 183A    	        JR      FPPN
 778:				;
 779:				;NOT - Complement integer.
 780:				;Result is integer numeric.
 781:				;
 782: 4383+7	03EE' 3E1A    	NOTK:   LD      A,26
 783: 4390+12	03F0' 1836    	        JR      FPPN
 784:				;
 785:				;DEG - Convert radians to degrees
 786:				;Result is floating-point numeric.
 787:				;
 788: 4402+7	03F2' 3E15    	DEG:    LD      A,21
 789: 4409+12	03F4' 1832    	        JR      FPPN
 790:				;
 791:				;RAD - Convert degrees to radians
 792:				;Result is floating-point numeric.
 793:				;
 794: 4421+7	03F6' 3E1B    	RAD:    LD      A,27
 795: 4428+12	03F8' 182E    	        JR      FPPN
 796:				;
 797:				;SGN - Return -1, 0 or +1
 798:				;Result is integer numeric.
 799:				;
 800: 4440+7	03FA' 3E1C    	SGN:    LD      A,28
 801: 4447+12	03FC' 182A    	        JR      FPPN
 802:				;
 803:				;INT - Floor function
 804:				;Result is integer numeric.
 805:				;
 806: 4459+7	03FE' 3E17    	INT:    LD      A,23
 807: 4466+12	0400' 1826    	        JR      FPPN
 808:				;
 809:				;SQR - square root
 810:				;Result is floating-point numeric.
 811:				;
 812: 4478+7	0402' 3E1E    	SQR:    LD      A,30
 813: 4485+12	0404' 1822    	        JR      FPPN
 814:				;
 815:				;TAN - Tangent function
 816:				;Result is floating-point numeric.
 817:				;
 818: 4497+7	0406' 3E1F    	TAN:    LD      A,31
 819: 4504+12	0408' 181E    	        JR      FPPN
 820:				;
 821:				;COS - Cosine function
 822:				;Result is floating-point numeric.
 823:				;
 824: 4516+7	040A' 3E14    	COS:    LD      A,20
 825: 4523+12	040C' 181A    	        JR      FPPN
 826:				;
 827:				;SIN - Sine function
 828:				;Result is floating-point numeric.
 829:				;
 830: 4535+7	040E' 3E1D    	SIN:    LD      A,29
 831: 4542+12	0410' 1816    	        JR      FPPN
 832:				;
 833:				;EXP - Exponential function
 834:				;Result is floating-point numeric.
 835:				;
 836: 4554+7	0412' 3E16    	EXP:    LD      A,22
 837: 4561+12	0414' 1812    	        JR      FPPN
 838:				;
 839:				;LN - Natural log.
 840:				;Result is floating-point numeric.
 841:				;
 842: 4573+7	0416' 3E18    	LN:     LD      A,24
 843: 4580+12	0418' 180E    	        JR      FPPN
 844:				;
 845:				;LOG - base-10 logarithm.
 846:				;Result is floating-point numeric.
 847:				;
 848: 4592+7	041A' 3E19    	LOG:    LD      A,25
 849: 4599+12	041C' 180A    	        JR      FPPN
 850:				;
 851:				;ASN - Arc-sine
 852:				;Result is floating-point numeric.
 853:				;
 854: 4611+7	041E' 3E12    	ASN:    LD      A,18
 855: 4618+12	0420' 1806    	        JR      FPPN
 856:				;
 857:				;ATN - arc-tangent
 858:				;Result is floating-point numeric.
 859:				;
 860: 4630+7	0422' 3E13    	ATN:    LD      A,19
 861: 4637+12	0424' 1802    	        JR      FPPN
 862:				;
 863:				;ACS - arc-cosine
 864:				;Result is floating point numeric.
 865:				;
 866: 4649+7	0426' 3E11    	ACS:    LD      A,17
 867: 4656+11	0428' F5      	FPPN:   PUSH    AF
 868: 4667+17	0429' CD9E01  	        CALL    ITEMN
 869: 4684+10	042C' F1      	        POP     AF
 870: 4694+17	042D' CD0000  	FPP1:   CALL    FPP
 871: 4711+10	0430' DA0000  	        JP      C,ERROR
 872: 4721+4	0433' AF      	        XOR     A
 873: 4725+10	0434' C9      	        RET
 874:				;
 875:				;SFIX - Convert to fixed-point notation
 876:				;
 877: 4735+7	0435' 3E26    	SFIX:   LD      A,38
 878: 4742+12	0437' 18F4    	        JR      FPP1
 879:				;
 880:				;SFLOAT - Convert to floating-point notation
 881:				;
 882: 4754+7	0439' 3E27    	SFLOAT: LD      A,39
 883: 4761+12	043B' 18F0    	        JR      FPP1
 884:				;
 885:				;VAL - Return numeric value of string.
 886:				;Result is variable type numeric.
 887:				;
 888: 4773+17	043D' CDAE01  	VAL:    CALL    ITEMS
 889: 4790+4	0440' AF      	VAL0:   XOR     A
 890: 4794+7	0441' 12      	        LD      (DE),A
 891: 4801+14	0442' DD210000	        LD      IX,ACCS
 892: 4815+7	0446' 3E24    	        LD      A,36
 893: 4822+12	0448' 18E3    	        JR      FPP1
 894:				;
 895:				;EVAL - Pass string to expression evaluator.
 896:				;Result is variable type (numeric or string).
 897:				;
 898: 4834+17	044A' CDAE01  	EVAL:   CALL    ITEMS
 899: 4851+7	044D' 3E0D    	        LD      A,CR
 900: 4858+7	044F' 12      	        LD      (DE),A
 901: 4865+15	0450' FDE5    	        PUSH    IY
 902: 4880+10	0452' 110000  	        LD      DE,ACCS
 903: 4890+14	0455' FD210000	        LD      IY,ACCS
 904: 4904+7	0459' 0E00    	        LD      C,0
 905: 4911+17	045B' CD0000  	        CALL    LEXAN2          ;TOKENISE
 906: 4928+7	045E' 12      	        LD      (DE),A
 907: 4935+6	045F' 13      	        INC     DE
 908: 4941+4	0460' AF      	        XOR     A
 909: 4945+17	0461' CDD906  	        CALL    PUSHS           ;PUT ON STACK
 910: 4962+14	0464' FD210200	        LD      IY,2
 911: 4976+15	0468' FD39    	        ADD     IY,SP
 912: 4991+17	046A' CD7E00  	        CALL    EXPR
 913: 5008+14	046D' FDE1    	        POP     IY
 914: 5022+15	046F' FD39    	        ADD     IY,SP
 915: 5037+10	0471' FDF9    	        LD      SP,IY           ;ADJUST STACK POINTER
 916: 5047+14	0473' FDE1    	        POP     IY
 917: 5061+4	0475' 08      	        EX      AF,AF'
 918: 5065+10	0476' C9      	        RET
 919:				;
 920:				;RND - Random number function.
 921:				; RND gives random integer 0-&FFFFFFFF
 922:				; RND(-n) seeds random number & returns -n.
 923:				; RND(0) returns last value in RND(1) form.
 924:				; RND(1) returns floating-point 0-0.99999999.
 925:				; RND(n) returns random integer 1-n.
 926:				;
 927: 5075+14	0477' DD210000	RND:    LD      IX,RANDOM
 928: 5089+17	047B' CD7207  	        CALL    NXT
 929: 5106+7	047E' FE28    	        CP      '('
 930: 5113+7+5	0480' 281C    	        JR      Z,RND5          ;ARGUMENT FOLLOWS
 931: 5120+17	0482' CD5002  	        CALL    LOAD5
 932: 5137+8	0485' CB19    	RND1:   RR      C
 933: 5145+7	0487' 0620    	        LD      B,32
 934: 5152+4	0489' D9      	RND2:   EXX                     ;CALCULATE NEXT
 935: 5156+15	048A' ED6A    	        ADC     HL,HL
 936: 5171+4	048C' D9      	        EXX
 937: 5175+15	048D' ED6A    	        ADC     HL,HL
 938: 5190+8	048F' CB5D    	        BIT     3,L
 939: 5198+7+5	0491' 2801    	        JR      Z,RND3
 940: 5205+4	0493' 3F      	        CCF
 941: 5209+8+5	0494' 10F3    	RND3:   DJNZ    RND2
 942: 5217+8	0496' CB11    	RND4:   RL      C               ;SAVE CARRY
 943: 5225+17	0498' CD0000  	        CALL    STORE5          ;STORE NEW NUMBER
 944: 5242+4	049B' AF      	        XOR     A
 945: 5246+4	049C' 4F      	        LD      C,A
 946: 5250+10	049D' C9      	        RET
 947: 5260+17	049E' CDA501  	RND5:   CALL    ITEMI
 948: 5277+14	04A1' DD210000	        LD      IX,RANDOM
 949: 5291+8	04A5' CB7C    	        BIT     7,H             ;NEGATIVE?
 950: 5299+4	04A7' 37      	        SCF
 951: 5303+7+5	04A8' 20EC    	        JR      NZ,RND4         ;SEED
 952: 5310+17	04AA' CD1906  	        CALL    TEST
 953: 5327+11	04AD' F5      	        PUSH    AF
 954: 5338+17	04AE' CD1106  	        CALL    SWAP
 955: 5355+4	04B1' D9      	        EXX
 956: 5359+17	04B2' CD5002  	        CALL    LOAD5
 957: 5376+10+7	04B5' C48504  	        CALL    NZ,RND1         ;NEXT IF NON-ZERO
 958: 5386+4	04B8' D9      	        EXX                     ;SCRAMBLE (CARE!)
 959: 5390+7	04B9' 0E7F    	        LD      C,7FH
 960: 5397+8	04BB' CB7C    	RND6:   BIT     7,H             ;FLOAT
 961: 5405+7+5	04BD' 2008    	        JR      NZ,RND7
 962: 5412+4	04BF' D9      	        EXX
 963: 5416+11	04C0' 29      	        ADD     HL,HL
 964: 5427+4	04C1' D9      	        EXX
 965: 5431+15	04C2' ED6A    	        ADC     HL,HL
 966: 5446+4	04C4' 0D      	        DEC     C
 967: 5450+7+5	04C5' 20F4    	        JR      NZ,RND6
 968: 5457+8	04C7' CBBC    	RND7:   RES     7,H             ;POSITIVE 0-0.999999
 969: 5465+10	04C9' F1      	        POP     AF
 970: 5475+5+6	04CA' C8      	        RET     Z               ;ZERO ARGUMENT
 971: 5480+4	04CB' D9      	        EXX
 972: 5484+4	04CC' 7B      	        LD      A,E
 973: 5488+4	04CD' 3D      	        DEC     A
 974: 5492+4	04CE' B2      	        OR      D
 975: 5496+4	04CF' D9      	        EXX
 976: 5500+4	04D0' B3      	        OR      E
 977: 5504+4	04D1' B2      	        OR      D
 978: 5508+5+6	04D2' C8      	        RET     Z               ;ARGUMENT=1
 979: 5513+7	04D3' 0600    	        LD      B,0             ;INTEGER MARKER
 980: 5520+7	04D5' 3E0A    	        LD      A,10
 981: 5527+17	04D7' CD0000  	        CALL    FPP             ;MULTIPLY
 982: 5544+10	04DA' DA0000  	        JP      C,ERROR
 983: 5554+17	04DD' CD3504  	        CALL    SFIX
 984: 5571+10	04E0' C30002  	        JP      ADD1
 985:				;
 986:				;INSTR - String search.
 987:				;Result is integer numeric.
 988:				;
 989: 5581+17	04E3' CD2707  	INSTR:  CALL    EXPRSC          ;STRING TO SEARCH
 990: 5598+17	04E6' CDD906  	        CALL    PUSHS           ;SAVE STRING ON STACK
 991: 5615+17	04E9' CD9701  	        CALL    EXPRS           ;SUB-STRING
 992: 5632+10	04EC' C1      	        POP     BC
 993: 5642+10	04ED' 210000  	        LD      HL,0
 994: 5652+11	04F0' 39      	        ADD     HL,SP           ;HL ADDRESSES MAIN
 995: 5663+11	04F1' C5      	        PUSH    BC              ;C = MAIN STRING LENGTH
 996: 5674+4	04F2' 43      	        LD      B,E             ;B = SUB-STRING LENGTH
 997: 5678+17	04F3' CD7207  	        CALL    NXT
 998: 5695+7	04F6' FE2C    	        CP      ','
 999: 5702+7	04F8' 3E00    	        LD      A,0
1000: 5709+7+5	04FA' 2017    	        JR      NZ,INSTR1
1001: 5716+10	04FC' FD23    	        INC     IY              ;SKIP COMMA
1002: 5726+11	04FE' C5      	        PUSH    BC              ;SAVE LENGTHS
1003: 5737+11	04FF' E5      	        PUSH    HL              ;SAVE MAIN ADDRESS
1004: 5748+17	0500' CDD906  	        CALL    PUSHS
1005: 5765+17	0503' CD8E01  	        CALL    EXPRI
1006: 5782+10	0506' C1      	        POP     BC
1007: 5792+17	0507' CDF806  	        CALL    POPS
1008: 5809+10	050A' E1      	        POP     HL              ;RESTORE MAIN ADDRESS
1009: 5819+10	050B' C1      	        POP     BC              ;RESTORE LENGTHS
1010: 5829+4	050C' D9      	        EXX
1011: 5833+4	050D' 7D      	        LD      A,L
1012: 5837+4	050E' D9      	        EXX
1013: 5841+4	050F' B7      	        OR      A
1014: 5845+7+5	0510' 2801    	        JR      Z,INSTR1
1015: 5852+4	0512' 3D      	        DEC     A
1016: 5856+10	0513' 110000  	INSTR1: LD      DE,ACCS         ;DE ADDRESSES SUB
1017: 5866+17	0516' CD2D05  	        CALL    SEARCH
1018: 5883+10	0519' D1      	        POP     DE
1019: 5893+7+5	051A' 2803    	        JR      Z,INSTR2        ;N.B. CARRY CLEARED
1020: 5900+15	051C' ED62    	        SBC     HL,HL
1021: 5915+11	051E' 39      	        ADD     HL,SP
1022: 5926+15	051F' ED72    	INSTR2: SBC     HL,SP
1023: 5941+4	0521' EB      	        EX      DE,HL
1024: 5945+7	0522' 2600    	        LD      H,0
1025: 5952+11	0524' 39      	        ADD     HL,SP
1026: 5963+6	0525' F9      	        LD      SP,HL
1027: 5969+4	0526' EB      	        EX      DE,HL
1028: 5973+17	0527' CD3607  	        CALL    BRAKET
1029: 5990+10	052A' C36E03  	        JP      COUNT1
1030:				;
1031:				;SEARCH - Search string for sub-string
1032:				;   Inputs: Main string at HL length C
1033:				;           Sub-string  at DE length B
1034:				;           Starting offset A
1035:				;  Outputs: NZ - not found
1036:				;           Z - found at location HL-1
1037:				;           Carry always cleared
1038:				;
1039: 6000+11	052D' C5      	SEARCH: PUSH    BC
1040: 6011+7	052E' 0600    	        LD      B,0
1041: 6018+4	0530' 4F      	        LD      C,A
1042: 6022+11	0531' 09      	        ADD     HL,BC           ;NEW START ADDRESS
1043: 6033+10	0532' C1      	        POP     BC
1044: 6043+4	0533' 91      	        SUB     C
1045: 6047+7+5	0534' 3028    	        JR      NC,SRCH4
1046: 6054+8	0536' ED44    	        NEG
1047: 6062+4	0538' 4F      	        LD      C,A             ;REMAINING LENGTH
1048: 6066+7	0539' 1A      	SRCH1:  LD      A,(DE)
1049: 6073+11	053A' C5      	        PUSH    BC
1050: 6084+7	053B' 0600    	        LD      B,0
1051: 6091+16+5	053D' EDB1    	        CPIR                    ;FIND FIRST CHARACTER
1052: 6107+4	053F' 79      	        LD      A,C
1053: 6111+10	0540' C1      	        POP     BC
1054: 6121+7+5	0541' 201B    	        JR      NZ,SRCH4
1055: 6128+4	0543' 4F      	        LD      C,A
1056: 6132+4	0544' 05      	        DEC     B               ;Bug fix
1057: 6136+4	0545' B8      	        CP      B               ;Bug fix
1058: 6140+4	0546' 04      	        INC     B               ;Bug fix
1059: 6144+7+5	0547' 3815    	        JR      C,SRCH4         ;Bug fix
1060: 6151+11	0549' C5      	        PUSH    BC
1061: 6162+11	054A' D5      	        PUSH    DE
1062: 6173+11	054B' E5      	        PUSH    HL
1063: 6184+4	054C' 05      	        DEC     B
1064: 6188+7+5	054D' 2808    	        JR      Z,SRCH3         ;FOUND !
1065: 6195+6	054F' 13      	SRCH2:  INC     DE
1066: 6201+7	0550' 1A      	        LD      A,(DE)
1067: 6208+7	0551' BE      	        CP      (HL)
1068: 6215+7+5	0552' 2003    	        JR      NZ,SRCH3
1069: 6222+6	0554' 23      	        INC     HL
1070: 6228+8+5	0555' 10F8    	        DJNZ    SRCH2
1071: 6236+10	0557' E1      	SRCH3:  POP     HL
1072: 6246+10	0558' D1      	        POP     DE
1073: 6256+10	0559' C1      	        POP     BC
1074: 6266+7+5	055A' 20DD    	        JR      NZ,SRCH1
1075: 6273+4	055C' AF      	        XOR     A               ;Z, NC
1076: 6277+10	055D' C9      	        RET                     ;FOUND
1077:				;
1078: 6287+7	055E' F6FF    	SRCH4:  OR      0FFH            ;NZ, NC
1079: 6294+10	0560' C9      	        RET                     ;NOT FOUND
1080:				;
1081:				;CHRS - Return character with given ASCII value.
1082:				;Result is string.
1083:				;
1084: 6304+17	0561' CDA501  	CHRS:   CALL    ITEMI
1085: 6321+4	0564' D9      	        EXX
1086: 6325+4	0565' 7D      	        LD      A,L
1087: 6329+12	0566' 1803    	        JR      GET1
1088:				;
1089:				;GETS - Return key pressed as string.
1090:				;Result is string.
1091:				;
1092: 6341+17	0568' CD0000  	GETS:   CALL    OSRDCH
1093: 6358+4	056B' 37      	GET1:   SCF
1094: 6362+12	056C' 1807    	        JR      INKEY1
1095:				;
1096:				;INKEYS - Wait up to n centiseconds for keypress.
1097:				;         Return key pressed as string or null
1098:				;         string if time elapsed.
1099:				;Result is string.
1100:				;
1101: 6374+17	056E' CDA501  	INKEYS: CALL    ITEMI
1102: 6391+4	0571' D9      	        EXX
1103: 6395+17	0572' CD0000  	        CALL    OSKEY
1104: 6412+10	0575' 110000  	INKEY1: LD      DE,ACCS
1105: 6422+7	0578' 12      	        LD      (DE),A
1106: 6429+7	0579' 3E80    	        LD      A,80H
1107: 6436+5+6	057B' D0      	        RET     NC
1108: 6441+4	057C' 1C      	        INC     E
1109: 6445+10	057D' C9      	        RET
1110:				;
1111:				;MID$ - Return sub-string.
1112:				;Result is string.
1113:				;
1114: 6455+17	057E' CD2707  	MIDS:   CALL    EXPRSC
1115: 6472+17	0581' CDD906  	        CALL    PUSHS           ;SAVE STRING ON STACK
1116: 6489+17	0584' CD8E01  	        CALL    EXPRI
1117: 6506+10	0587' C1      	        POP     BC
1118: 6516+17	0588' CDF806  	        CALL    POPS
1119: 6533+4	058B' D9      	        EXX
1120: 6537+4	058C' 7D      	        LD      A,L
1121: 6541+4	058D' D9      	        EXX
1122: 6545+4	058E' B7      	        OR      A
1123: 6549+7+5	058F' 280D    	        JR      Z,MIDS1
1124: 6556+4	0591' 3D      	        DEC     A
1125: 6560+4	0592' 6F      	        LD      L,A
1126: 6564+4	0593' 93      	        SUB     E
1127: 6568+7	0594' 1E00    	        LD      E,0
1128: 6575+7+5	0596' 3006    	        JR      NC,MIDS1
1129: 6582+8	0598' ED44    	        NEG
1130: 6590+4	059A' 4F      	        LD      C,A
1131: 6594+17	059B' CDD505  	        CALL    RIGHT1
1132: 6611+17	059E' CD7207  	MIDS1:  CALL    NXT
1133: 6628+7	05A1' FE2C    	        CP      ','
1134: 6635+10	05A3' FD23    	        INC     IY
1135: 6645+7+5	05A5' 280B    	        JR      Z,LEFT1
1136: 6652+10	05A7' FD2B    	        DEC     IY
1137: 6662+17	05A9' CD3607  	        CALL    BRAKET
1138: 6679+7	05AC' 3E80    	        LD      A,80H
1139: 6686+10	05AE' C9      	        RET
1140:				;
1141:				;LEFT$ - Return left part of string.
1142:				;Carry cleared if entire string returned.
1143:				;Result is string.
1144:				;
1145: 6696+17	05AF' CD2707  	LEFTS:  CALL    EXPRSC
1146: 6713+17	05B2' CDD906  	LEFT1:  CALL    PUSHS           ;SAVE STRING ON STACK
1147: 6730+17	05B5' CD8E01  	        CALL    EXPRI
1148: 6747+10	05B8' C1      	        POP     BC
1149: 6757+17	05B9' CDF806  	        CALL    POPS
1150: 6774+17	05BC' CD3607  	        CALL    BRAKET
1151: 6791+4	05BF' D9      	        EXX
1152: 6795+4	05C0' 7D      	        LD      A,L
1153: 6799+4	05C1' D9      	        EXX
1154: 6803+4	05C2' BB      	        CP      E
1155: 6807+7+5	05C3' 3002    	        JR      NC,LEFT3
1156: 6814+4	05C5' 6B      	        LD      L,E             ;FOR RIGHTS
1157: 6818+4	05C6' 5F      	LEFT2:  LD      E,A
1158: 6822+7	05C7' 3E80    	LEFT3:  LD      A,80H           ;STRING MARKER
1159: 6829+10	05C9' C9      	        RET
1160:				;
1161:				;RIGHT$ - Return right part of string.
1162:				;Result is string.
1163:				;
1164: 6839+17	05CA' CDAF05  	RIGHTS: CALL    LEFTS
1165: 6856+5+6	05CD' D0      	        RET     NC
1166: 6861+4	05CE' 1C      	        INC     E
1167: 6865+4	05CF' 1D      	        DEC     E
1168: 6869+5+6	05D0' C8      	        RET     Z
1169: 6874+4	05D1' 4B      	        LD      C,E
1170: 6878+4	05D2' 7D      	        LD      A,L
1171: 6882+4	05D3' 93      	        SUB     E
1172: 6886+4	05D4' 6F      	        LD      L,A
1173: 6890+7	05D5' 0600    	RIGHT1: LD      B,0
1174: 6897+4	05D7' 62      	        LD      H,D
1175: 6901+4	05D8' 58      	        LD      E,B
1176: 6905+16+5	05D9' EDB0    	        LDIR                    ;MOVE
1177: 6921+7	05DB' 3E80    	        LD      A,80H
1178: 6928+10	05DD' C9      	        RET
1179:				;
1180:				;STRINGS - Return n concatenations of a string.
1181:				;Result is string.
1182:				;
1183: 6938+17	05DE' CD8E01  	STRING: CALL    EXPRI
1184: 6955+17	05E1' CD2A07  	        CALL    COMMA
1185: 6972+4	05E4' D9      	        EXX
1186: 6976+4	05E5' 7D      	        LD      A,L
1187: 6980+4	05E6' D9      	        EXX
1188: 6984+11	05E7' F5      	        PUSH    AF
1189: 6995+17	05E8' CD9701  	        CALL    EXPRS
1190: 7012+17	05EB' CD3607  	        CALL    BRAKET
1191: 7029+10	05EE' F1      	        POP     AF
1192: 7039+4	05EF' B7      	        OR      A
1193: 7043+7+5	05F0' 28D4    	        JR      Z,LEFT2         ;N=0
1194: 7050+4	05F2' 3D      	        DEC     A
1195: 7054+4	05F3' 4F      	        LD      C,A
1196: 7058+7	05F4' 3E80    	        LD      A,80H           ;STRING MARKER
1197: 7065+5+6	05F6' C8      	        RET     Z
1198: 7070+4	05F7' 1C      	        INC     E
1199: 7074+4	05F8' 1D      	        DEC     E
1200: 7078+5+6	05F9' C8      	        RET     Z               ;NULL STRING
1201: 7083+4	05FA' 43      	        LD      B,E
1202: 7087+4	05FB' 62      	        LD      H,D
1203: 7091+7	05FC' 2E00    	        LD      L,0
1204: 7098+11	05FE' C5      	STRIN1: PUSH    BC
1205: 7109+7	05FF' 7E      	STRIN2: LD      A,(HL)
1206: 7116+6	0600' 23      	        INC     HL
1207: 7122+7	0601' 12      	        LD      (DE),A
1208: 7129+4	0602' 1C      	        INC     E
1209: 7133+7	0603' 3E13    	        LD      A,19
1210: 7140+10	0605' CA0000  	        JP      Z,ERROR         ;"String too long"
1211: 7150+8+5	0608' 10F5    	        DJNZ    STRIN2
1212: 7158+10	060A' C1      	        POP     BC
1213: 7168+4	060B' 0D      	        DEC     C
1214: 7172+7+5	060C' 20F0    	        JR      NZ,STRIN1
1215: 7179+7	060E' 3E80    	        LD      A,80H
1216: 7186+10	0610' C9      	        RET
1217:				;
1219:				;
1220:				;SUBROUTINES
1221:				;
1222:				;SWAP - Swap arguments
1223:				;Exchanges DE,HL D'E',H'L' and B,C
1224:				;Destroys: A,B,C,D,E,H,L,D',E',H',L'
1225:				;
1226: 7196+4	0611' 79      	SWAP:   LD      A,C
1227: 7200+4	0612' 48      	        LD      C,B
1228: 7204+4	0613' 47      	        LD      B,A
1229: 7208+4	0614' EB      	        EX      DE,HL
1230: 7212+4	0615' D9      	        EXX
1231: 7216+4	0616' EB      	        EX      DE,HL
1232: 7220+4	0617' D9      	        EXX
1233: 7224+10	0618' C9      	        RET
1234:				;
1235:				;TEST - Test HLH'L' for zero
1236:				;Outputs: Z-flag set & A=0 if zero
1237:				;Destroys: A,F
1238:				;
1239: 7234+4	0619' 7C      	TEST:   LD      A,H
1240: 7238+4	061A' B5      	        OR      L
1241: 7242+4	061B' D9      	        EXX
1242: 7246+4	061C' B4      	        OR      H
1243: 7250+4	061D' B5      	        OR      L
1244: 7254+4	061E' D9      	        EXX
1245: 7258+10	061F' C9      	        RET
1246:				;
1247:				;DECODE - Decode line number in pseudo-binary.
1248:				;   Inputs: IY = Text pointer.
1249:				;   Outputs: HL=0, H'L'=line number, C=0.
1250:				;   Destroys: A,C,H,L,H',L',IY,F
1251:				;
1252: 7268+4	0620' D9      	DECODE: EXX
1253: 7272+19	0621' FD7E00  	        LD      A,(IY)
1254: 7291+10	0624' FD23    	        INC     IY
1255: 7301+4	0626' 17      	        RLA
1256: 7305+4	0627' 17      	        RLA
1257: 7309+4	0628' 67      	        LD      H,A
1258: 7313+7	0629' E6C0    	        AND     0C0H
1259: 7320+19	062B' FDAE00  	        XOR     (IY)
1260: 7339+10	062E' FD23    	        INC     IY
1261: 7349+4	0630' 6F      	        LD      L,A
1262: 7353+4	0631' 7C      	        LD      A,H
1263: 7357+4	0632' 17      	        RLA
1264: 7361+4	0633' 17      	        RLA
1265: 7365+7	0634' E6C0    	        AND     0C0H
1266: 7372+19	0636' FDAE00  	        XOR     (IY)
1267: 7391+10	0639' FD23    	        INC     IY
1268: 7401+4	063B' 67      	        LD      H,A
1269: 7405+4	063C' D9      	        EXX
1270: 7409+4	063D' AF      	        XOR     A
1271: 7413+4	063E' 4F      	        LD      C,A
1272: 7417+4	063F' 67      	        LD      H,A
1273: 7421+4	0640' 6F      	        LD      L,A
1274: 7425+10	0641' C9      	        RET
1275:				;
1276:				;HEXSTR - convert numeric value to HEX string.
1277:				;   Inputs: HLH'L'C = integer or floating-point number
1278:				;  Outputs: String in string accumulator.
1279:				;           E = string length.  D = ACCS/256
1280:				;
1281: 7435+10	0642' FD23    	HEXSTS: INC     IY              ;SKIP TILDE
1282: 7445+17	0644' CD9E01  	        CALL    ITEMN
1283: 7462+17	0647' CD4D06  	        CALL    HEXSTR
1284: 7479+7	064A' 3E80    	        LD      A,80H
1285: 7486+10	064C' C9      	        RET
1286:				;
1287: 7496+17	064D' CD3504  	HEXSTR: CALL    SFIX
1288: 7513+10	0650' 010800  	        LD      BC,8
1289: 7523+10	0653' 110000  	        LD      DE,ACCS
1290: 7533+11	0656' C5      	HEXST1: PUSH    BC
1291: 7544+7	0657' 0604    	        LD      B,4
1292: 7551+4	0659' AF      	        XOR     A
1293: 7555+4	065A' D9      	HEXST2: EXX
1294: 7559+11	065B' 29      	        ADD     HL,HL
1295: 7570+4	065C' D9      	        EXX
1296: 7574+15	065D' ED6A    	        ADC     HL,HL
1297: 7589+4	065F' 17      	        RLA
1298: 7593+8+5	0660' 10F8    	        DJNZ    HEXST2
1299: 7601+10	0662' C1      	        POP     BC
1300: 7611+4	0663' 0D      	        DEC     C
1301: 7615+5+6	0664' F8      	        RET     M
1302: 7620+7+5	0665' 2806    	        JR      Z,HEXST3
1303: 7627+4	0667' B7      	        OR      A
1304: 7631+7+5	0668' 2003    	        JR      NZ,HEXST3
1305: 7638+4	066A' B8      	        CP      B
1306: 7642+7+5	066B' 28E9    	        JR      Z,HEXST1
1307: 7649+7	066D' C690    	HEXST3: ADD     A,90H
1308: 7656+4	066F' 27      	        DAA
1309: 7660+7	0670' CE40    	        ADC     A,40H
1310: 7667+4	0672' 27      	        DAA
1311: 7671+7	0673' 12      	        LD      (DE),A
1312: 7678+6	0674' 13      	        INC     DE
1313: 7684+4	0675' 47      	        LD      B,A
1314: 7688+12	0676' 18DE    	        JR      HEXST1
1315:				;
1316:				;Function STR - convert numeric value to ASCII string.
1317:				;   Inputs: HLH'L'C = integer or floating-point number.
1318:				;  Outputs: String in string accumulator.
1319:				;           E = length, D = ACCS/256
1320:				;           A = 80H (type=string)
1321:				;
1322:				;First normalise for decimal output:
1323:				;
1324: 7700+17	0678' CD7207  	STRS:   CALL    NXT
1325: 7717+7	067B' FE7E    	        CP      '~'
1326: 7724+7+5	067D' 28C3    	        JR      Z,HEXSTS
1327: 7731+17	067F' CD9E01  	        CALL    ITEMN
1328: 7748+14	0682' DD210000	        LD      IX,STAVAR
1329: 7762+19	0686' DD7E03  	        LD      A,(IX+3)
1330: 7781+4	0689' B7      	        OR      A
1331: 7785+14	068A' DD21B206	        LD      IX,G9-1         ;G9 FORMAT
1332: 7799+7+5	068E' 2804    	        JR      Z,STR0
1333: 7806+14	0690' DD210000	STR:    LD      IX,STAVAR
1334: 7820+10	0694' 110000  	STR0:   LD      DE,ACCS
1335: 7830+7	0697' 3E25    	        LD      A,37
1336: 7837+17	0699' CD0000  	        CALL    FPP
1337: 7854+10	069C' DA0000  	        JP      C,ERROR
1338: 7864+20	069F' DDCB0246	        BIT     0,(IX+2)
1339: 7884+7	06A3' 3E80    	STR1:   LD      A,80H           ;STRING MARKER
1340: 7891+5+6	06A5' C8      	        RET     Z
1341: 7896+4	06A6' 79      	        LD      A,C
1342: 7900+7	06A7' C604    	        ADD     A,4
1343: 7907+4	06A9' BB      	STR2:   CP      E
1344: 7911+7+5	06AA' 28F7    	        JR      Z,STR1
1345: 7918+4	06AC' EB      	        EX      DE,HL
1346: 7922+10	06AD' 3620    	        LD      (HL),' '        ;TRAILING SPACE
1347: 7932+6	06AF' 23      	        INC     HL
1348: 7938+4	06B0' EB      	        EX      DE,HL
1349: 7942+12	06B1' 18F6    	        JR      STR2
1350:				;
1351:     -	06B3' 0900    	G9:     DEFW    9
1352:				;
1353:				;STRING COMPARE
1354:				;Compare string (DE) length B with string (HL) length C.
1355:				;Result preset to false.
1356:				;
1357: 7954+17	06B5' CDC206  	SCP:    CALL    SCP0
1358: 7971+7	06B8' 3E00    	ZERO:   LD      A,0
1359: 7978+4	06BA' D9      	        EXX
1360: 7982+4	06BB' 67      	        LD      H,A
1361: 7986+4	06BC' 6F      	        LD      L,A
1362: 7990+4	06BD' D9      	        EXX
1363: 7994+4	06BE' 67      	        LD      H,A
1364: 7998+4	06BF' 6F      	        LD      L,A
1365: 8002+4	06C0' 4F      	        LD      C,A
1366: 8006+10	06C1' C9      	        RET
1367:				;
1368: 8016+4	06C2' 04      	SCP0:   INC     B
1369: 8020+4	06C3' 0C      	        INC     C
1370: 8024+4	06C4' 05      	SCP1:   DEC     B
1371: 8028+7+5	06C5' 280A    	        JR      Z,SCP2
1372: 8035+4	06C7' 0D      	        DEC     C
1373: 8039+7+5	06C8' 280C    	        JR      Z,SCP3
1374: 8046+7	06CA' 1A      	        LD      A,(DE)
1375: 8053+7	06CB' BE      	        CP      (HL)
1376: 8060+5+6	06CC' C0      	        RET     NZ
1377: 8065+6	06CD' 13      	        INC     DE
1378: 8071+6	06CE' 23      	        INC     HL
1379: 8077+12	06CF' 18F3    	        JR      SCP1
1380: 8089+4	06D1' B7      	SCP2:   OR      A
1381: 8093+4	06D2' 0D      	        DEC     C
1382: 8097+5+6	06D3' C8      	        RET     Z
1383: 8102+4	06D4' 37      	        SCF
1384: 8106+10	06D5' C9      	        RET
1385: 8116+4	06D6' B7      	SCP3:   OR      A
1386: 8120+4	06D7' 0C      	        INC     C
1387: 8124+10	06D8' C9      	        RET
1388:				;
1389:				;PUSHS - SAVE STRING ON STACK.
1390:				;    Inputs: String in string accumulator.
1391:				;            E = string length.
1392:				;            A - saved on stack.
1393:				;  Destroys: B,C,D,E,H,L,IX,SP,F
1394:				;
1395: 8134+17	06D9' CD0000  	PUSHS:  CALL    CHECK
1396: 8151+14	06DC' DDE1    	        POP     IX              ;RETURN ADDRESS
1397: 8165+4	06DE' B7      	        OR      A               ;CLEAR CARRY
1398: 8169+10	06DF' 210000  	        LD      HL,ACCS
1399: 8179+4	06E2' 54      	        LD      D,H
1400: 8183+4	06E3' 45      	        LD      B,L             ;B=0
1401: 8187+15	06E4' ED52    	        SBC     HL,DE
1402: 8202+11	06E6' 39      	        ADD     HL,SP
1403: 8213+6	06E7' F9      	        LD      SP,HL
1404: 8219+4	06E8' 57      	        LD      D,A
1405: 8223+11	06E9' D5      	        PUSH    DE
1406: 8234+7+5	06EA' 280A    	        JR      Z,PUSHS1        ;ZERO LENGTH
1407: 8241+4	06EC' 4B      	        LD      C,E
1408: 8245+10	06ED' 110000  	        LD      DE,ACCS
1409: 8255+4	06F0' EB      	        EX      DE,HL
1410: 8259+16+5	06F1' EDB0    	        LDIR                    ;COPY TO STACK
1411: 8275+17	06F3' CD0000  	        CALL    CHECK
1412: 8292+8	06F6' DDE9    	PUSHS1: JP      (IX)            ;"RETURN"
1413:				;
1414:				;POPS - RESTORE STRING FROM STACK.
1415:				;    Inputs: C = string length.
1416:				;   Outputs: String in string accumulator.
1417:				;            E = string length.
1418:				;  Destroys: B,C,D,E,H,L,IX,SP,F
1419:				;
1420: 8300+14	06F8' DDE1    	POPS:   POP     IX              ;RETURN ADDRESS
1421: 8314+10	06FA' 210000  	        LD      HL,0
1422: 8324+4	06FD' 44      	        LD      B,H             ;B=0
1423: 8328+11	06FE' 39      	        ADD     HL,SP
1424: 8339+10	06FF' 110000  	        LD      DE,ACCS
1425: 8349+4	0702' 0C      	        INC     C
1426: 8353+4	0703' 0D      	        DEC     C
1427: 8357+7+5	0704' 2802    	        JR      Z,POPS1         ;ZERO LENGTH
1428: 8364+16+5	0706' EDB0    	        LDIR                    ;COPY FROM STACK
1429: 8380+6	0708' F9      	POPS1:  LD      SP,HL
1430: 8386+8	0709' DDE9    	        JP      (IX)            ;"RETURN"
1431:				;
1432: 8394+19	070B' FD7E00  	HEXDIG: LD      A,(IY)
1433: 8413+7	070E' FE30    	        CP      '0'
1434: 8420+5+6	0710' D8      	        RET     C
1435: 8425+7	0711' FE3A    	        CP      '9'+1
1436: 8432+4	0713' 3F      	        CCF
1437: 8436+5+6	0714' D0      	        RET     NC
1438: 8441+7	0715' FE41    	        CP      'A'
1439: 8448+5+6	0717' D8      	        RET     C
1440: 8453+7	0718' D637    	        SUB     'A'-10
1441: 8460+7	071A' FE10    	        CP      16
1442: 8467+4	071C' 3F      	        CCF
1443: 8471+10	071D' C9      	        RET
1444:				;
1445: 8481+7	071E' FE3E    	RELOP?: CP      '>'
1446: 8488+5+6	0720' D0      	        RET     NC
1447: 8493+7	0721' FE3D    	        CP      '='
1448: 8500+5+6	0723' D0      	        RET     NC
1449: 8505+7	0724' FE3C    	        CP      '<'
1450: 8512+10	0726' C9      	        RET
1451:				;
1452: 8522+17	0727' CD9701  	EXPRSC: CALL    EXPRS
1453: 8539+17	072A' CD7207  	COMMA:  CALL    NXT
1454: 8556+10	072D' FD23    	        INC     IY
1455: 8566+7	072F' FE2C    	        CP      ','
1456: 8573+5+6	0731' C8      	        RET     Z
1457: 8578+7	0732' 3E05    	        LD      A,5
1458: 8585+12	0734' 180A    	        JR      ERROR1          ;"Missing ,"
1459:				;
1460: 8597+17	0736' CD7207  	BRAKET: CALL    NXT
1461: 8614+10	0739' FD23    	        INC     IY
1462: 8624+7	073B' FE29    	        CP      ')'
1463: 8631+5+6	073D' C8      	        RET     Z
1464: 8636+7	073E' 3E1B    	        LD      A,27
1465: 8643+10	0740' C30000  	ERROR1: JP      ERROR           ;"Missing )"
1466:				;
1467: 8653+10	0743' FD23    	SAVE:   INC     IY
1468: 8663+4	0745' 08      	SAVE1:  EX      AF,AF'
1469: 8667+10	0746' FAB301  	        JP      M,TYPE
1470: 8677+4	0749' 08      	        EX      AF,AF'
1471: 8681+19	074A' E3      	        EX      (SP),HL
1472: 8700+4	074B' D9      	        EXX
1473: 8704+11	074C' E5      	        PUSH    HL
1474: 8715+4	074D' D9      	        EXX
1475: 8719+11	074E' F5      	        PUSH    AF
1476: 8730+11	074F' C5      	        PUSH    BC
1477: 8741+4	0750' E9      	        JP      (HL)
1478:				;
1479: 8745+4	0751' 08      	DOIT:   EX      AF,AF'
1480: 8749+10	0752' FAB301  	        JP      M,TYPE
1481: 8759+4	0755' D9      	        EXX
1482: 8763+10	0756' C1      	        POP     BC              ;RETURN ADDRESS
1483: 8773+4	0757' D9      	        EXX
1484: 8777+4	0758' 79      	        LD      A,C
1485: 8781+10	0759' C1      	        POP     BC
1486: 8791+4	075A' 47      	        LD      B,A
1487: 8795+10	075B' F1      	        POP     AF              ;OPERATOR
1488: 8805+4	075C' D9      	        EXX
1489: 8809+4	075D' EB      	        EX      DE,HL
1490: 8813+10	075E' E1      	        POP     HL
1491: 8823+4	075F' D9      	        EXX
1492: 8827+4	0760' EB      	        EX      DE,HL
1493: 8831+10	0761' E1      	        POP     HL
1494: 8841+4	0762' D9      	        EXX
1495: 8845+11	0763' C5      	        PUSH    BC
1496: 8856+4	0764' D9      	        EXX
1497: 8860+7	0765' E60F    	        AND     0FH
1498: 8867+17	0767' CD0000  	        CALL    FPP
1499: 8884+7+5	076A' 38D4    	        JR      C,ERROR1
1500: 8891+4	076C' AF      	        XOR     A
1501: 8895+4	076D' 08      	        EX      AF,AF'          ;TYPE
1502: 8899+19	076E' FD7E00  	        LD      A,(IY)
1503: 8918+10	0771' C9      	        RET
1504:				;
1505: 8928+19	0772' FD7E00  	NXT:    LD      A,(IY)
1506: 8947+7	0775' FE20    	        CP      ' '
1507: 8954+5+6	0777' C0      	        RET     NZ
1508: 8959+10	0778' FD23    	        INC     IY
1509: 8969+10	077A' C37207  	        JP      NXT
1510:				;
1511: 8979+11	077D' E5      	DISPT2: PUSH    HL
1512: 8990+10	077E' 217200  	        LD      HL,SOPTBL
1513: 9000+12	0781' 1806    	        JR      DISPT0
1514:				;
1515: 9012+11	0783' E5      	DISPAT: PUSH    HL
1516: 9023+7	0784' D68D    	        SUB     FUNTOK
1517: 9030+10	0786' 210000  	        LD      HL,FUNTBL
1518: 9040+11	0789' C5      	DISPT0: PUSH    BC
1519: 9051+4	078A' 87      	        ADD     A,A
1520: 9055+4	078B' 4F      	        LD      C,A
1521: 9059+7	078C' 0600    	        LD      B,0
1522: 9066+11	078E' 09      	        ADD     HL,BC
1523: 9077+7	078F' 7E      	        LD      A,(HL)
1524: 9084+6	0790' 23      	        INC     HL
1525: 9090+7	0791' 66      	        LD      H,(HL)
1526: 9097+4	0792' 6F      	        LD      L,A
1527: 9101+10	0793' C1      	        POP     BC
1528: 9111+19	0794' E3      	        EX      (SP),HL
1529: 9130+10	0795' C9      	        RET                     ;OFF TO ROUTINE
1530:				;
1531:     -	000D'         	CR      EQU     0DH
1532:				;
1533:     -	0796'         	        END



Statistics:

     4	passes
     0	jr promotions
   226	symbols
  1942	bytes



Symbol Table:

ABS              3EA'     1002
ACCS            00        0 (extern)
ACS              426'     1062
ADD1             200'     512
ADVAL           00        0 (extern)
ANDK           =80        128
ASC              32E'     814
ASC0             331'     817
ASC1             336'     822
ASN              41E'     1054
ATN              422'     1058
BADHEX           1E0'     480
BGET             30A'     778
BRAKET           736'     1846 (public)
CHANEL          00        0 (extern)
CHECK           00        0 (extern)
CHRS             561'     1377
COMMA            72A'     1834 (public)
CON              2AE'     686
CONS             289'     649 (public)
CONS1            295'     661
CONS2            2A0'     672
CONS3            28C'     652
COS              40A'     1034
COUNT           00        0 (extern)
COUNT0           36C'     876
COUNT1           36E'     878
COUNTV           369'     873
CR             =0D        13
DECODE           620'     1568 (public)
DEG              3F2'     1010
DISPAT           783'     1923
DISPT0           789'     1929
DISPT2           77D'     1917
DIVK           =81        129
DLOAD5           2BF'     703 (public)
DOIT             751'     1873
EOF              2FE'     766
EORK           =82        130
ERL             00        0 (extern)
ERLV             35F'     863
ERR             00        0 (extern)
ERROR           00        0 (extern)
ERROR0           29D'     669
ERROR1           740'     1856
ERRV             364'     868
EVAL             44A'     1098
EXP              412'     1042
EXP3S3           144'     324
EXPR            7E'       126 (public)
EXPR0A          81'       129
EXPR0B          88'       136
EXPR1           93'       147
EXPR1A          96'       150
EXPR2           A4'       164
EXPR2B          BE'       190
EXPR2C          CC'       204
EXPR2S          D6'       214
EXPR3            103'     259
EXPR3A           106'     262
EXPR3B           112'     274
EXPR3S           11D'     285
EXPR4            152'     338
EXPR4A           155'     341
EXPR4B           164'     356
EXPR5            16F'     367
EXPR5A           174'     372
EXPRI            18E'     398 (public)
EXPRN            187'     391 (public)
EXPRS            197'     407 (public)
EXPRSC           727'     1831
EXT              38E'     910
FN              00        0 (extern)
FPP             00        0 (extern)
FPP1             42D'     1069
FPPN             428'     1064
FUNTBL          00'       0
FUNTOK         =8D        141
G9               6B3'     1715
GET              318'     792
GET0             329'     809
GET1             56B'     1387
GETCSR          00        0 (extern)
GETEXT          00        0 (extern)
GETIME          00        0 (extern)
GETIMS          00        0 (extern)
GETPTR          00        0 (extern)
GETS             568'     1384
GETVAR          00        0 (extern)
HEX              1C0'     448
HEX1             1C8'     456
HEX2             1CE'     462
HEXDIG           70B'     1803
HEXST1           656'     1622
HEXST2           65A'     1626
HEXST3           66D'     1645
HEXSTR           64D'     1613 (public)
HEXSTS           642'     1602
HIMEM           00        0 (extern)
HIMEMV           346'     838
INKEY            313'     787
INKEY1           575'     1397
INKEYS           56E'     1390
INSTR            4E3'     1251
INSTR1           513'     1299
INSTR2           51F'     1311
INT              3FE'     1022
ITEM             20A'     522
ITEM1            1B8'     440
ITEM2            23E'     574
ITEMI            1A5'     421 (public)
ITEMN            19E'     414
ITEMS            1AE'     430
LEFT1            5B2'     1458
LEFT2            5C6'     1478
LEFT3            5C7'     1479
LEFTS            5AF'     1455
LEN              33B'     827
LEXAN2          00        0 (extern)
LISTON          00        0 (extern)
LN               416'     1046
LOAD1            262'     610
LOAD4            253'     595 (public)
LOAD5            250'     592
LOADN            247'     583 (public)
LOADS            2D1'     721 (public)
LOADS2           2E7'     743
LOG              41A'     1050
LOMEM           00        0 (extern)
LOMEMV           341'     833
MIDS             57E'     1406
MIDS1            59E'     1438
MINUS            1E5'     485
MINUS0           1E8'     488
MODK           =83        131
NEGATE           1F2'     498
NOS1             27A'     634
NOSUCH           26E'     622
NOTK             3EE'     1006
NXT              772'     1906 (public)
OPENIN           379'     889
OPENOT           374'     884
OPENUP           376'     886
ORK            =84        132
OSBGET          00        0 (extern)
OSKEY           00        0 (extern)
OSOPEN          00        0 (extern)
OSRDCH          00        0 (extern)
OSSTAT          00        0 (extern)
PAGE            00        0 (extern)
PAGEV            34B'     843
PC              00        0 (extern)
PI               3E6'     998
POINT           00        0 (extern)
POPS             6F8'     1784 (public)
POPS1            708'     1800
POS              2F3'     755
PTR              396'     918
PUSHS            6D9'     1753 (public)
PUSHS1           6F6'     1782
RAD              3F6'     1014
RANDOM          00        0 (extern)
RANGE           00        0 (extern)
RELOP?           71E'     1822
RIGHT1           5D5'     1493
RIGHTS           5CA'     1482
RND              477'     1143
RND1             485'     1157
RND2             489'     1161
RND3             494'     1172
RND4             496'     1174
RND5             49E'     1182
RND6             4BB'     1211
RND7             4C7'     1223
SAVE             743'     1859
SAVE1            745'     1861
SCP              6B5'     1717
SCP0             6C2'     1730
SCP1             6C4'     1732
SCP2             6D1'     1745
SCP3             6D6'     1750
SEARCH           52D'     1325 (public)
SEQ              3D7'     983
SFIX             435'     1077 (public)
SFLOAT           439'     1081
SGE              3C3'     963
SGN              3FA'     1018
SGT              3BC'     956
SIN              40E'     1038
SLE              3C9'     969
SLT              3B6'     950
SNE              3D1'     977
SOPTBL          72'       114
SQR              402'     1026
SRCH1            539'     1337
SRCH2            54F'     1359
SRCH3            557'     1367
SRCH4            55E'     1374
STAVAR          00        0 (extern)
STORE4          00        0 (extern)
STORE5          00        0 (extern)
STR              690'     1680 (public)
STR0             694'     1684
STR1             6A3'     1699
STR2             6A9'     1705
STRIN1           5FE'     1534
STRIN2           5FF'     1535
STRING           5DE'     1502
STRS             678'     1656
SWAP             611'     1553 (public)
SYNTAX          00        0 (extern)
TAN              406'     1030
TCMD           =C6        198
TEST             619'     1561 (public)
TIME0            3A8'     936
TIMEV            39E'     926
TIMEVS           3AE'     942
TOP             00        0 (extern)
TOPV             350'     848
TRUE             3DB'     987
TYPE             1B3'     435
USR             00        0 (extern)
VAL              43D'     1085
VAL0             440'     1088 (public)
VPOS             2F9'     761
ZERO             6B8'     1720 (public)
